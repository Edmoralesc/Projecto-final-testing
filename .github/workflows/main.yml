name: React CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]


jobs:
  backend-api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api  # path to your Python API
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: pytest --maxfail=1 --disable-warnings -q

      - name: Build Docker image
        run: docker build -t emoralesc/api:latest .


      - name: Push image to Docker Hub
        if: github.ref == 'refs/heads/main'
        run: docker push  emoralesc/api:latest


  frontend-react:    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run tests
        working-directory: ./frontend
        run: npm test -- --coverage --watchAll=false

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: frontend
          name: frontend-coverage
        continue-on-error: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: emoralesc/frontend:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/frontend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/frontend:buildcache,mode=max

      - name: Image digest
        run: echo ${{ steps.meta.outputs.digest }}
